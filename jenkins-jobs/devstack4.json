{"files": {}, "disable_rollback": true, "parameters": {}, "stack_name": "stack224", "environment": {}, "template": {"heat_template_version": "2013-05-23", "description": "Heat demo template for wait conditions", "parameters": {"instance_type": {"default": "m1.medium", "type": "string", "description": "Type of instance (flavor) to be used", "label": "Instance Type"}, "key_name": {"default": "default", "type": "string", "description": "Name of key-pair to be used for compute instance", "label": "Key Name"}}, "resources": {"service1": {"type": "OS::Nova::Server", "properties": {"key_name": {"get_param": "key_name"}, "flavor": "m1.medium", "image": "devstack2", "user_data": {"str_replace": {"params": {"$wait_handle$": {"get_resource": "service1_wait_handle"}}, "template": "#!/bin/bash -v\necho \"deb http://10.135.126.20:81/latest trusty main\" > /etc/apt/sources.list\napt-get update\napt-get -y --force-yes install mypackage\necho \"Listen 81\" >> /etc/apache2/ports.conf\necho \"<VirtualHost *:81>\" >> /etc/apache2/sites-enabled/repo.conf\necho \"        ServerAdmin webmaster@localhost\" >> /etc/apache2/sites-enabled/repo.conf\necho \"        DocumentRoot /var/www/\" >> /etc/apache2/sites-enabled/repo.conf\necho \"        ErrorLog ${APACHE_LOG_DIR}/error.log\" >> /etc/apache2/sites-enabled/repo.conf\necho \"        CustomLog ${APACHE_LOG_DIR}/access.log combined\" >> /etc/apache2/sites-enabled/repo.conf\necho \"</VirtualHost>\" >> /etc/apache2/sites-enabled/repo.conf\nservice apache2 restart\ncat /dev/null > /opt/stack/logs/stack.sh.log.summary\npkgStatus=`dpkg -l | grep mypackage | wc -l`\nstackStatus=`cat /opt/stack/logs/stack.sh.log.summary | grep \"stack.sh completed\"  | wc -l`\nwhile [ $stackStatus -eq 0 ]\ndo\nsleep 5\npkgStatus=`dpkg -l | grep mypackage | wc -l`\nstackStatus=`cat /opt/stack/logs/stack.sh.log.summary | grep \"stack.sh completed\"  | wc -l`\ndone\nsleep 20\nhostname=`ifconfig eth0 | grep \"inet addr\" | awk {' print $2 '} | cut -d: -f2`\nexport OS_AUTH_URL=http://$hostname:5000/v2.0\nexport OS_USERNAME=admin\nexport OS_PASSWORD=cloud\nexport OS_TENANT_NAME=demo\nendpoints=`/usr/local/bin/keystone endpoint-list | tr \"\\\\n\" \",\"`\ncurl -X PUT -H 'Content-Type:application/json' \\\n     -d '{\"Status\" : \"SUCCESS\",\"Reason\" : \"Configuration OK\",\"UniqueId\" : \"SERVICE1\",\"Data\" : \"'\"$endpoints\"'\"}' \\\n     \"$wait_handle$\"\n"}}}}, "service1_wait": {"depends_on": "service1", "type": "AWS::CloudFormation::WaitCondition", "properties": {"Handle": {"get_resource": "service1_wait_handle"}, "Timeout": 10000}}, "service1_floating_association": {"type": "AWS::EC2::EIPAssociation", "properties": {"InstanceId": {"Ref": "service1"}, "EIP": {"Ref": "service1_floating"}}}, "service1_floating": {"type": "AWS::EC2::EIP"}, "service1_wait_handle": {"type": "AWS::CloudFormation::WaitConditionHandle"}}}}
